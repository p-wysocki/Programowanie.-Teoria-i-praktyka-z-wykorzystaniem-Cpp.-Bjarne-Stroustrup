  Source.cpp
  The contents of <span> are available only with C++20 or later.
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory(701,82): error C2664: 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string(std::initializer_list<_Elem>,const _Alloc &)': cannot convert argument 1 from 'std::basic_istream<char,std::char_traits<char>>' to 'std::initializer_list<_Elem>'
          with
          [
              _Elem=char,
              _Alloc=std::allocator<char>
          ]
          and
          [
              _Elem=char
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xmemory(701,103): message : No user-defined-conversion operator available that can perform this conversion, or the operator cannot be called
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\xstring(2754,5): message : see declaration of 'std::basic_string<char,std::char_traits<char>,std::allocator<char>>::basic_string'
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector(682): message : see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::basic_istream<char,std::char_traits<char>>&>(_Alloc &,_Objty *const ,std::basic_istream<char,std::char_traits<char>> &)' being compiled
          with
          [
              _Alloc=std::allocator<std::string>,
              _Ty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>,
              _Objty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector(687): message : see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::basic_istream<char,std::char_traits<char>>&>(_Alloc &,_Objty *const ,std::basic_istream<char,std::char_traits<char>> &)' being compiled
          with
          [
              _Alloc=std::allocator<std::string>,
              _Ty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>,
              _Objty=std::basic_string<char,std::char_traits<char>,std::allocator<char>>
          ]
C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\include\vector(700): message : see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_with_unused_capacity<std::basic_istream<char,std::char_traits<char>>&>(std::basic_istream<char,std::char_traits<char>> &)' being compiled
          with
          [
              _Ty=std::string
          ]
C:\Users\PC\Desktop\C++\Programowanie.-Teoria-i-praktyka-z-wykorzystaniem-Cpp.-Bjarne-Stroustrup\11. Indywidualizacja operacji wejścia i wyjścia\Project1\Project1\Source.cpp(65): message : see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::emplace_back<std::basic_istream<char,std::char_traits<char>>&>(std::basic_istream<char,std::char_traits<char>> &)' being compiled
          with
          [
              _Ty=std::string
          ]
C:\Users\PC\Desktop\C++\Programowanie.-Teoria-i-praktyka-z-wykorzystaniem-Cpp.-Bjarne-Stroustrup\11. Indywidualizacja operacji wejścia i wyjścia\Project1\Project1\Source.cpp(49,1): error C2440: 'initializing': cannot convert from 'T *' to 'void *'
          with
          [
              T=const std::string
          ]
C:\Users\PC\Desktop\C++\Programowanie.-Teoria-i-praktyka-z-wykorzystaniem-Cpp.-Bjarne-Stroustrup\11. Indywidualizacja operacji wejścia i wyjścia\Project1\Project1\Source.cpp(49,13): message : Conversion loses qualifiers
C:\Users\PC\Desktop\C++\Programowanie.-Teoria-i-praktyka-z-wykorzystaniem-Cpp.-Bjarne-Stroustrup\11. Indywidualizacja operacji wejścia i wyjścia\Project1\Project1\Source.cpp(69): message : see reference to function template instantiation 'char *as_bytes<const std::string>(T &)' being compiled
          with
          [
              T=const std::string
          ]
